   private MouseListener getMyMouseListener() {
           
                                return new MouseListener() {
                                    @Override
                                    public void mouseClicked(MouseEvent e) {
                                        // Get the source of the click which is the JPanel.
                                        JPanel jPanel = (JPanel) e.getSource();
                                        // Get the ID of the file.
                                        int fileId = Integer.parseInt(jPanel.getName());
                                        // Loop through the file storage and see which file is the selected one.
                                        for (MyFile myFile : myFiles) {
                                            if (myFile.getId() == fileId) {
                                                JFrame jfPreview = createFrame(myFile.getName(), myFile.getData(), myFile.getFileExtension());
                                                jfPreview.setVisible(true);
                                            }
                                        }
                                    }

                                    private JFrame createFrame(String fileName, byte[] fileData, String fileExtension) {
                                     //   public static JFrame createFrame(String fileName, byte[] fileData, String fileExtension) {

                                            // Frame to hold everything.
                                            JFrame jFrame = new JFrame(" File Downloader/ delete");
                                            // Set the size of the frame.
                                            jFrame.setSize(700, 700);

                                            // Panel to hold everything.
                                            JPanel jPanel = new JPanel();
                                            // Make the layout a box layout with child elements stacked on top of each other.
                                            jPanel.setLayout(new BoxLayout(jPanel, BoxLayout.Y_AXIS));

                                            // Title above panel.
                                            JLabel jlTitle = new JLabel(" File Downloader");
                                            // Center the label title horizontally.
                                            jlTitle.setAlignmentX(Component.CENTER_ALIGNMENT);
                                            // Change the font family, size, and style.
                                            jlTitle.setFont(new Font("Arial", Font.BOLD, 20));
                                            // Add spacing on the top and bottom of the element.
                                            jlTitle.setBorder(new EmptyBorder(5,0,5,0));

                                            // Label to prompt the user if they are sure they want to download the file.
                                            JLabel jlPrompt = new JLabel("Are you sure you want to download " + fileName + "?");
                                            // Change the font style, size, and family of the label.
                                            jlPrompt.setFont(new Font("Arial", Font.BOLD, 15));
                                            // Add spacing on the top and bottom of the label.
                                           // jlPrompt.setBorder(new EmptyBorder(5,0,5,0));
                                            // Center the label horizontally.
                                            jlPrompt.setAlignmentX(Component.CENTER_ALIGNMENT);

                                            // Create the yes for accepting the download.
                                            JButton jbYes = new JButton("Yes");
                                            jbYes.setPreferredSize(new Dimension(80, 30));
                                            // Set the font for the button.
                                            jbYes.setFont(new Font("Arial", Font.BOLD, 10));

                                            // No button for rejecting the download.
                                            JButton jbNo = new JButton("No");
                                            // Change the size of the button must be preferred because if not the layout will ignore it.
                                            jbNo.setPreferredSize(new Dimension(70, 30));
                                            // Set the font for the button.
                                            jbNo.setFont(new Font("Arial", Font.BOLD, 10));


                                            // Panel to hold the yes and no buttons and make the next to each other left and right.
                                            JPanel jpButtons = new JPanel();
                                            // Add spacing around the panel.
                                          //  jpButtons.setBorder(new EmptyBorder(5, 0, 5, 0));
                                            // Add the yes and no buttons.

                                            jpButtons.add(jbYes);
                                            jpButtons.add(jbNo);


                                            // Label to hold the content of the file whether it be text of images.
                                            JLabel jlFileContent = new JLabel();
                                            // Align the label horizontally.
                                            jlFileContent.setAlignmentX(Component.CENTER_ALIGNMENT);



                                            // If the file is a text file then display the text.
                                            if (fileExtension.equals("txt")) {
                                                // Wrap it with <html> so that new lines are made.
                                                jlFileContent.setText("<html>" + new String(fileData) + "</html>");
                                                // If the file is not a text file then make it an image.
                                            } else {
                                               jlFileContent.setIcon(new ImageIcon(fileData));
                                                jlFileContent.setPreferredSize(new Dimension(270, 230));
                                                //fileData.getScaledInstance(Image.SCALE_SMOOTH);
                                               // Image resizedImage =
                                                //        fileData.getScaledInstance(500,500,Image.SCALE_SMOOTH);
                                              //  jlFileContent.setIcon(new ImageIcon(resizedImage));

                                            }
                                            System.out.println(fileData);

                                            // Yes so download file.
                                            jbYes.addActionListener(new ActionListener() {
                                                @Override
                                                public void actionPerformed(ActionEvent e) {
                                                    // Create the file with its name.


                                                    final File[] fileTodown = new File[1];
                                                    JFileChooser jFileChooser = new JFileChooser();
                                                    // Get the selected file.
                                                    jFileChooser.setCurrentDirectory(new java.io.File("."));
                                                    jFileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                                                    if (jFileChooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                                                        //System.out.println("getCurrentDirectory(): " + jFileChooser.getCurrentDirectory());
                                                        System.out.println("Selected Folder for download is : " + jFileChooser.getSelectedFile());
                                                    } else {
                                                        System.out.println("No Selection ");
                                                    }

                                                    fileTodown[0] = jFileChooser.getSelectedFile();


                                                    File fileToDownload = new File(fileTodown[0],fileName);
                                                    try {
                                                        // Create a stream to write data to the file.
                                                        FileOutputStream fileOutputStream = new FileOutputStream(fileToDownload);
                                                        // Write the actual file data to the file.
                                                        fileOutputStream.write(fileData);
                                                        // Close the stream.
                                                        fileOutputStream.close();
                                                        // Get rid of the jFrame. after the user clicked yes.
                                                        jFrame.dispose();
                                                    } catch (IOException ex) {
                                                        ex.printStackTrace();
                                                    }

                                                }
                                            });

                                            // No so close window in download.
                                            jbNo.addActionListener(new ActionListener() {
                                                @Override
                                                public void actionPerformed(ActionEvent e) {
                                                    // User clicked no so don't download the file but close the jframe.
                                                    jFrame.dispose();
                                                }
                                            });
                                        
                                            // Add everything to the panel before adding to the frame.
                                            jPanel.add(jlTitle);

                                            jPanel.add(jlPrompt);
                                            jPanel.add(jpButtons);

                                            jPanel.add(jlFileContent);

                                           

                                            // Add panel to the frame.
                                            jFrame.add(jPanel);

                                            // Return the jFrame so it can be passed the right data and then shown.
                                            return jFrame;



                                    }

                                    @Override
                                    public void mousePressed(MouseEvent e) {

                                    }

                                    @Override
                                    public void mouseReleased(MouseEvent e) {

                                    }

                                    @Override
                                    public void mouseEntered(MouseEvent e) {

                                    }

                                    @Override
                                    public void mouseExited(MouseEvent e) {

                                    }
                                };
       }